services:
  db:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_2
    volumes:
      - /Users/saurabhborsiwala/SRE_Training/task-2/Docker/backend/Data/postgresql/data:/var/lib/postgresql/data
    ports:
      - 5432:5432      

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
  
  backend_spring:
    container_name: backend_spring
    build:
      context: ./backend/java_spring_boot/task_2
      dockerfile: dockerfile.spring
    command: java -jar /app.jar
    ports:
      - 8081:8081
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/task_2
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
  
  backend_python:
    build:
      context: ./backend/python
      dockerfile: dockerfile.python
    command: python manage.py runserver 0.0.0.0:8080
    ports:
      - 8080:8080
    container_name: python-django
    depends_on:
      - db

  frontend:
    container_name: react
    build:
      context: ./frontend
      dockerfile: dockerfile.react
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
        